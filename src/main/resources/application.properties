# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
# spring.datasource.url = jdbc:mysql://localhost:3306/mydb
#spring.datasource.url=jdbc:postgresql://aakysbbwpqhtut:ee2aa056df3ab52c484ac065f5e8ff93e3b196e3ee15749c43a09438f605b1b0@ec2-46-51-178-171.eu-west-1.compute.amazonaws.com:5432/de7ej1lhkegqts
#spring.datasource.username = aakysbbwpqhtut
#spring.datasource.password = ee2aa056df3ab52c484ac065f5e8ff93e3b196e3ee15749c43a09438f605b1b0
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.

#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.url=jdbc:postgres://aakysbbwpqhtut:ee2aa056df3ab52c484ac065f5e8ff93e3b196e3ee15749c43a09438f605b1b0@ec2-46-51-178-171.eu-west-1.compute.amazonaws.com:5432/de7ej1lhkegqts
#spring.datasource.username=aakysbbwpqhtut
#spring.datasource.password=ee2aa056df3ab52c484ac065f5e8ff93e3b196e3ee15749c43a09438f605b1b0
#
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=false
#spring.jpa.hibernate.ddl-auto=create



spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true
spring.jpa.hibernate.ddl-auto = create-drop


Read more: http://mrbool.com/rest-server-with-spring-data-spring-boot-and-postgresql/34023#ixzz4SSzgnoCq

## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#
## Show or not log for each sql query
#spring.jpa.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = create
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager)
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect